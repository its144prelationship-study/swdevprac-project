@startuml Create Booking (POST)

header Create Booking Sequence Diagram
title "Create Booking (POST)"

participant "Client" as client
participant "<<javaScript>>\n:server" as server
participant "<<router>>\n:bookings" as routerBookings
participant "<<controllers>>\n:bookings" as controllersBookings
participant "<<model>>\n:Booking" as modelBooking
participant "<<model>>\n:Company" as modelCompany
database "<<MongoDB>>\n:bookings" as BookingsDatabase
database "<<MongoDB>>\n:companies" as CompaniesDatabase

client->server ++:req.get('/bookings')
server->routerBookings ++:app.use('/bookings',bookings)
routerBookings -> controllersBookings ++: getBooking(req, res, next)
controllersBookings->modelCompany ++: findById(company_id)
modelCompany -> CompaniesDatabase ++: CompanySchema
CompaniesDatabase --> modelCompany --: company
controllersBookings <-- modelCompany --:company
controllersBookings->modelBooking ++:find({ user_id: req.user.id })
modelBooking ->BookingsDatabase ++: BookingSchema
BookingsDatabase --> modelBooking --: existing_booking
controllersBookings <-- modelBooking --:existing_booking
controllersBookings->modelBooking ++:findOne({ user_id: req.user.id, \ncompany_id, date })
modelBooking ->BookingsDatabase ++: BookingSchema
BookingsDatabase --> modelBooking --: duplicate_booking
controllersBookings <-- modelBooking --:duplicate_booking
controllersBookings->modelBooking ++:create({ user_id: req.user.id, \ncompany_id, date })
modelBooking ->BookingsDatabase ++: BookingSchema
BookingsDatabase --> modelBooking --: booking
controllersBookings <-- modelBooking --:booking
controllersBookings->client --:response

@enduml
